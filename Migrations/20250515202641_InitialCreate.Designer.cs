// <auto-generated />
using System;
using Cinema.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaDBContext))]
    [Migration("20250515202641_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("Cinema.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number_of_seats");

                    b.Property<bool?>("Threedee")
                        .HasColumnType("INTEGER")
                        .HasColumnName("threedee");

                    b.HasKey("Id")
                        .HasName("PK__halls__3213E83FCFD57C07");

                    b.ToTable("halls");
                });

            modelBuilder.Entity("Cinema.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Director")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("director");

                    b.Property<int?>("Length")
                        .HasColumnType("INTEGER")
                        .HasColumnName("length");

                    b.Property<string>("Summary")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__movies__3213E83F8BD5869E");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Cinema.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CostumerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("costumer_id");

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number_of_seats");

                    b.Property<int?>("ScrId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("scr_id");

                    b.HasKey("Id")
                        .HasName("PK__reservat__3213E83F3AF22C3B");

                    b.HasIndex("CostumerId");

                    b.HasIndex("ScrId");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("Cinema.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DatetimeOfPlay")
                        .HasColumnType("datetime")
                        .HasColumnName("datetime_of_play");

                    b.Property<int>("HallId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hall_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("movie_id");

                    b.HasKey("Id")
                        .HasName("PK__screenin__3213E83FBF8903A1");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("screenings");
                });

            modelBuilder.Entity("Cinema.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("Email")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F3487FF8E");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Cinema.Models.Reservation", b =>
                {
                    b.HasOne("Cinema.Models.User", "Costumer")
                        .WithMany("Reservations")
                        .HasForeignKey("CostumerId")
                        .IsRequired()
                        .HasConstraintName("FK_reservations_users");

                    b.HasOne("Cinema.Models.Screening", "Scr")
                        .WithMany("Reservations")
                        .HasForeignKey("ScrId")
                        .HasConstraintName("FK_reservations_screenings");

                    b.Navigation("Costumer");

                    b.Navigation("Scr");
                });

            modelBuilder.Entity("Cinema.Models.Screening", b =>
                {
                    b.HasOne("Cinema.Models.Hall", "Hall")
                        .WithMany("Screenings")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK_screenings_halls");

                    b.HasOne("Cinema.Models.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_screenings_movies");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Cinema.Models.Hall", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Cinema.Models.Movie", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("Cinema.Models.Screening", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Cinema.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
